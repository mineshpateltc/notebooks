{
  "paragraphs": [
    {
      "title": "Introduction",
      "text": "%md ###This notebook supports multiple language backend\n- default: scala with SparkContext available as sc\n- %md: markdown\n- %sql: hive on spark by default. hiveContext object is also available by default. If you specify zeppelin.spark.useHiveContext as false in interpreter settings then this will use spark sql and sqlContext object becomes available\n- %pyspark: pyspark\n- %sh: shell \n\nInterpreters are loaded lazily and hence takes some time the first time.\nNote uses a websocket for communication. So changes propagate to all open instnces of this notebook instantaneously\nUser can configure parameters with which sc object is created by going to interpreters. \nUser can create as many sc interpreters as they want with different settings\nQubole Notes supports auto assist for code completion. You can view the suggestions using the key combination  __Ctrl + .(period)__\n\n##Note that\n- If you use sc.stop in the notebook then spark context will stop and you have to go to interpreter page and click on restart to restart that interpreter again.\n",
      "dateUpdated": "Jun 3, 2016 3:18:41 AM",
      "config": {
        "enabled": true,
        "title": true,
        "tableHide": false,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "looknfeel": "default",
        "editorHide": false,
        "colWidth": 12.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1464923921186_1449528009",
      "id": "20160603-031841_1254406512",
      "dateCreated": "Jun 3, 2016 3:18:41 AM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sql select league, yr, sum(salary) from baseball_salaries_orc group by league, yr order by yr",
      "dateUpdated": "Oct 12, 2016 6:32:32 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "multiBarChart",
          "height": 300.0,
          "optionOpen": true,
          "keys": [
            {
              "name": "yr",
              "index": 1.0,
              "aggr": "sum",
              "$$hashKey": "object:545"
            }
          ],
          "values": [
            {
              "name": "_c2",
              "index": 2.0,
              "aggr": "sum",
              "$$hashKey": "object:549"
            }
          ],
          "groups": [
            {
              "name": "league",
              "index": 0.0,
              "aggr": "sum",
              "$$hashKey": "object:547"
            }
          ],
          "scatter": {
            "xAxis": {
              "name": "league",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "yr",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/sql"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475867429321_1690780510",
      "id": "20161007-191029_916588387",
      "dateCreated": "Oct 7, 2016 7:10:29 PM",
      "dateStarted": "Oct 12, 2016 6:32:32 PM",
      "dateFinished": "Oct 12, 2016 6:32:54 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475867427778_710055564",
      "id": "20161007-191027_457295973",
      "dateCreated": "Oct 7, 2016 7:10:27 PM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Run spark command",
      "text": "sc.version",
      "dateUpdated": "Sep 12, 2016 7:19:45 PM",
      "config": {
        "enabled": true,
        "title": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/scala",
        "looknfeel": "default",
        "colWidth": 12.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1464923921187_1449143260",
      "id": "20160603-031841_963284585",
      "dateCreated": "Jun 3, 2016 3:18:41 AM",
      "dateStarted": "Sep 12, 2016 7:19:45 PM",
      "dateFinished": "Sep 12, 2016 7:19:46 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Scala SparkPi Example",
      "text": "import scala.math.random\nimport org.apache.spark._\nval slices \u003d 6 \nval n \u003d 100000 * slices\nval count \u003d sc.parallelize(1 to n, slices).map { i \u003d\u003e\n  val x \u003d random * 2 - 1\n  val y \u003d random * 2 - 1\n  if (x*x + y*y \u003c 1) 1 else 0\n}.reduce(_ + _)\nprintln(\"Pi is roughly \" + 4.0 * count / n)\n",
      "dateUpdated": "Sep 27, 2016 7:47:19 PM",
      "config": {
        "enabled": true,
        "title": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/scala",
        "looknfeel": "default",
        "colWidth": 12.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1464923921188_1447219516",
      "id": "20160603-031841_44805362",
      "dateCreated": "Jun 3, 2016 3:18:41 AM",
      "dateStarted": "Sep 27, 2016 7:47:19 PM",
      "dateFinished": "Sep 27, 2016 7:47:25 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Top 10 words in dataset in s3",
      "text": "//get top 10 words in a dataset in s3\nval file \u003d sc.textFile(\"s3://paid-qubole/default-datasets/gutenberg/pg20417.txt\")\nval counts \u003d file.flatMap(line \u003d\u003e line.split(\" \")).\nmap(word \u003d\u003e (word, 1)).\nreduceByKey(_+_).\nmap(item \u003d\u003e item.swap).  // interchanges position of entries in each tuple\nsortByKey(false).\nmap(item \u003d\u003e item.swap).  // interchanges position of entries in each tuple\ntake(10)\n\ncounts.foreach(println)\n",
      "dateUpdated": "Jun 3, 2016 3:18:41 AM",
      "config": {
        "enabled": true,
        "title": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "looknfeel": "default",
        "colWidth": 12.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1464923921188_1447219516",
      "id": "20160603-031841_1424442684",
      "dateCreated": "Jun 3, 2016 3:18:41 AM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Spark Sql",
      "text": "%md ### sql example\n- while using hive on spark you can fetch list of hive tables in qubole and query those tables",
      "dateUpdated": "Jun 3, 2016 3:21:10 AM",
      "config": {
        "enabled": true,
        "title": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "looknfeel": "default",
        "colWidth": 12.0,
        "editorMode": "ace/mode/markdown"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1464923921189_1446834767",
      "id": "20160603-031841_460493232",
      "dateCreated": "Jun 3, 2016 3:18:41 AM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sql show tables",
      "dateUpdated": "Jun 3, 2016 3:18:41 AM",
      "config": {
        "enabled": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "tableName",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "isTemporary",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "tableName",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "isTemporary",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "looknfeel": "default",
        "colWidth": 12.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1464923921189_1446834767",
      "id": "20160603-031841_2126170083",
      "dateCreated": "Jun 3, 2016 3:18:41 AM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "//Alternate way to use spark hive sql\nsqlContext.sql(\"show tables\").collect",
      "dateUpdated": "Jun 3, 2016 3:21:18 AM",
      "config": {
        "enabled": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "looknfeel": "default",
        "colWidth": 12.0,
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1464923921190_1447989014",
      "id": "20160603-031841_412698901",
      "dateCreated": "Jun 3, 2016 3:18:41 AM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Visualizations on airline data for four quarters",
      "text": "%sql select origin, quarter, count(*)/1000 count from default_qubole_airline_origin_destination where quarter is not NULL group by origin, quarter order by count desc limit 100",
      "dateUpdated": "Oct 7, 2016 6:58:50 PM",
      "config": {
        "enabled": true,
        "title": true,
        "tableHide": false,
        "graph": {
          "mode": "multiBarChart",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "origin",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "count",
              "index": 2.0,
              "aggr": "sum"
            }
          ],
          "groups": [
            {
              "name": "quarter",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "scatter": {
            "xAxis": {
              "name": "origin",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "quarter",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "editorMode": "ace/mode/sql",
        "editorHide": false,
        "colWidth": 12.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1464923921190_1447989014",
      "id": "20160603-031841_2005732944",
      "dateCreated": "Jun 3, 2016 3:18:41 AM",
      "dateStarted": "Oct 7, 2016 6:58:50 PM",
      "dateFinished": "Oct 7, 2016 7:00:08 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sql select * from default_qubole_memetracker limit 10",
      "dateUpdated": "Jun 3, 2016 3:18:41 AM",
      "config": {
        "enabled": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": true,
          "keys": [
            {
              "name": "site",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "ts",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "site",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "ts",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "colWidth": 12.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1464923921191_1447604265",
      "id": "20160603-031841_1302782849",
      "dateCreated": "Jun 3, 2016 3:18:41 AM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "pyspark Pi Calculation example",
      "text": "%pyspark\nfrom random import random\nfrom operator import add\nsc.version\nsys.version\npartitions \u003d 10\nn \u003d 100000 * partitions\n\ndef f(_):\n    x \u003d random() * 2 - 1\n    y \u003d random() * 2 - 1\n    return 1 if x ** 2 + y ** 2 \u003c 1 else 0\n\ncount \u003d sc.parallelize(xrange(1, n + 1), partitions).map(f).reduce(add)\nprint \"Pi is roughly %f\" % (4.0 * count / n)",
      "dateUpdated": "Oct 27, 2016 8:41:07 PM",
      "config": {
        "enabled": true,
        "title": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1464923921191_1447604265",
      "id": "20160603-031841_128078331",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "Pi is roughly 3.142280\n"
      },
      "dateCreated": "Jun 3, 2016 3:18:41 AM",
      "dateStarted": "Oct 27, 2016 8:41:08 PM",
      "dateFinished": "Oct 27, 2016 8:41:14 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Temp table Example: Prepare Data",
      "text": "%sh\nwget http://archive.ics.uci.edu/ml/machine-learning-databases/00222/bank.zip -o /tmp/bank.zip\nrm -rf /tmp/data\nmkdir /tmp/data\nunzip bank.zip -d /tmp/data\nrm /tmp/bank.zip\nls /tmp/data\nhadoop dfs -put -f /tmp/data/bank-full.csv /tmp\n",
      "dateUpdated": "Jun 3, 2016 3:18:41 AM",
      "config": {
        "enabled": true,
        "title": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "colWidth": 12.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1464923921192_1445680520",
      "id": "20160603-031841_833894823",
      "dateCreated": "Jun 3, 2016 3:18:41 AM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Temp table Example: Load Data in Table",
      "text": "val bankText \u003d sc.textFile(\"/tmp/bank-full.csv\")\n\ncase class Bank(age: Integer, job: String, marital: String, education: String, balance: Integer)\n\nval bank \u003d bankText.map(s \u003d\u003e s.split(\";\")).filter(s \u003d\u003e s(0) !\u003d \"\\\"age\\\"\").map(\n    s \u003d\u003e Bank(s(0).toInt, \n            s(1).replaceAll(\"\\\"\", \"\"),\n            s(2).replaceAll(\"\\\"\", \"\"),\n            s(3).replaceAll(\"\\\"\", \"\"),\n            s(5).replaceAll(\"\\\"\", \"\").toInt\n        )\n).toDF()\nbank.registerTempTable(\"bank\")",
      "dateUpdated": "Jun 3, 2016 3:18:41 AM",
      "config": {
        "enabled": true,
        "title": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "colWidth": 12.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1464923921192_1445680520",
      "id": "20160603-031841_792009839",
      "dateCreated": "Jun 3, 2016 3:18:41 AM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sql \nselect age, count(1) value \nfrom bank \nwhere age \u003c ${maxAge\u003d30} \ngroup by age \norder by age",
      "dateUpdated": "Jun 3, 2016 3:18:41 AM",
      "config": {
        "enabled": true,
        "graph": {
          "mode": "multiBarChart",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "age",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "value",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "age",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "value",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "colWidth": 4.0
      },
      "settings": {
        "params": {
          "maxAge": "30"
        },
        "forms": {
          "maxAge": {
            "name": "maxAge",
            "defaultValue": "30",
            "hidden": false
          }
        }
      },
      "jobName": "paragraph_1464923921193_1445295771",
      "id": "20160603-031841_1205719967",
      "dateCreated": "Jun 3, 2016 3:18:41 AM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sql \nselect age, count(1) value\nfrom bank \nwhere age \u003c 30 \ngroup by age \norder by age",
      "dateUpdated": "Jun 3, 2016 3:21:59 AM",
      "config": {
        "enabled": true,
        "graph": {
          "mode": "multiBarChart",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "age",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "value",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "age",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "value",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "colWidth": 6.0,
        "editorMode": "ace/mode/sql"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1464923921193_1445295771",
      "id": "20160603-031841_879792277",
      "dateCreated": "Jun 3, 2016 3:18:41 AM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sql \nselect age, count(1) value \nfrom bank \nwhere marital\u003d\"${marital\u003dsingle,single|divorced|married}\" \ngroup by age \norder by age",
      "dateUpdated": "Jun 3, 2016 3:21:37 AM",
      "config": {
        "enabled": true,
        "graph": {
          "mode": "multiBarChart",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "age",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "value",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "age",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "value",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "colWidth": 4.0,
        "editorMode": "ace/mode/sql",
        "title": false
      },
      "settings": {
        "params": {
          "marital": "single"
        },
        "forms": {
          "marital": {
            "name": "marital",
            "defaultValue": "single",
            "options": [
              {
                "value": "single"
              },
              {
                "value": "divorced"
              },
              {
                "value": "married"
              }
            ],
            "hidden": false
          }
        }
      },
      "jobName": "paragraph_1464923921193_1445295771",
      "id": "20160603-031841_1243889944",
      "dateCreated": "Jun 3, 2016 3:18:41 AM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Other features",
      "text": "%md\n### simple printing data\n- println can be used\n- data can be printed in tabular form using %table\n- input forms are also supported",
      "dateUpdated": "Jun 3, 2016 3:18:41 AM",
      "config": {
        "enabled": true,
        "title": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "looknfeel": "default",
        "colWidth": 12.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1464923921194_1446450018",
      "id": "20160603-031841_304985263",
      "dateCreated": "Jun 3, 2016 3:18:41 AM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "println(\"age\\tnumbers\\n2\\t10\\n3\\t20\\n8\\t70\\n12\\t50\\n20\\t10\")",
      "dateUpdated": "Jun 3, 2016 3:18:41 AM",
      "config": {
        "enabled": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "looknfeel": "default",
        "colWidth": 12.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1464923921194_1446450018",
      "id": "20160603-031841_1991333499",
      "dateCreated": "Jun 3, 2016 3:18:41 AM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "println(\"%table age\\tnumbers\\n2\\t10\\n3\\t20\\n8\\t70\\n12\\t50\\n20\\t10\")",
      "dateUpdated": "Jun 3, 2016 3:18:41 AM",
      "config": {
        "enabled": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "looknfeel": "default",
        "colWidth": 12.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1464923921195_1446065269",
      "id": "20160603-031841_1956962845",
      "dateCreated": "Jun 3, 2016 3:18:41 AM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "println(\"%table age\\tnumbers\\n2\\t10\\n3\\t20\\n\" + z.input(\"maxAge\",11)+ \"\\t70\\n12\\t50\\n20\\t10\")",
      "dateUpdated": "Jun 3, 2016 3:18:41 AM",
      "config": {
        "enabled": true,
        "tableHide": false,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "age",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "numbers",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "age",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "numbers",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "looknfeel": "default",
        "colWidth": 12.0
      },
      "settings": {
        "params": {
          "maxAge": "12",
          "Age": "19"
        },
        "forms": {
          "maxAge": {
            "name": "maxAge",
            "displayName": "maxAge",
            "defaultValue": 11.0,
            "hidden": false
          }
        }
      },
      "jobName": "paragraph_1464923921195_1446065269",
      "id": "20160603-031841_1962482110",
      "dateCreated": "Jun 3, 2016 3:18:41 AM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%sh echo foo",
      "dateUpdated": "Oct 7, 2016 6:46:18 PM",
      "config": {
        "enabled": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "colWidth": 12.0,
        "editorMode": "ace/mode/sh"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1464923921196_1444141525",
      "id": "20160603-031841_235488497",
      "dateCreated": "Jun 3, 2016 3:18:41 AM",
      "dateStarted": "Oct 7, 2016 6:46:18 PM",
      "dateFinished": "Oct 7, 2016 6:46:19 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1475865978114_1520882437",
      "id": "20161007-184618_305734624",
      "dateCreated": "Oct 7, 2016 6:46:18 PM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "ExampleNote - MP -2",
  "id": "2BQ5ZMBQ3160151464923921175",
  "angularObjects": {
    "2BYDZCXRW226061476200946376": [],
    "2BZ962XBX226061476200946380": [],
    "2C1BYPUSU226061476200946385": [],
    "2BYK2AEUU226061476200946271": []
  },
  "config": {
    "looknfeel": "default"
  },
  "info": {},
  "source": "FCN"
}